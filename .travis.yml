language: cpp

matrix:
  include:

    # linux gcc
    - os: linux
      env:
         - COMPILER='g++-9'

    # os X
    - os: osx
      osx_image: xcode11
      compiler: clang
      env:
         - COMPILER='clang++'
         - MYLDFLAGS='-L/usr/local/opt/llvm/lib'
         - MYCXXFLAGS='-I/usr/local/opt/llvm/include'
         - MYPATH='/usr/local/opt/llvm/bin'


addons:
  homebrew:
    packages:
    - llvm
    update: true
  apt:
    sources:
    - sourceline: 'ppa:ubuntu-toolchain-r/test'
    packages:
    - g++-9
    update: true

before_install:
  - export PATH="${MYPATH}:$PATH"
  - export CXX=${COMPILER}
  - export LDFLAGS=${MYLDFLAGS}
  - export CXXFLAGS=${MYCXXFLAGS}
  - git submodule update --init

install:
  - cmake -E env LDFLAGS="$LDFLAGS" CXXFLAGS="$CXXFLAGS" cmake . -BRelease -DCMAKE_BUILD_TYPE=Release
  - cmake -E env LDFLAGS="$LDFLAGS" CXXFLAGS="$CXXFLAGS" cmake . -BDebug -DCMAKE_BUILD_TYPE=Debug

script:
  - cd Debug
  - make -j 2
  - CTEST_OUTPUT_ON_FAILURE=1 ctest -j 2
  - cd ../Release
  - make -j 2
  - CTEST_OUTPUT_ON_FAILURE=1 ctest -j 2

before_deploy:
  - if [[ $TRAVIS_OS_NAME == "linux" && $COMPILER == "g++-9" ]]; then
      mkdir ${TRAVIS_BUILD_DIR}/bin;
      cp ${TRAVIS_BUILD_DIR}/Release/lua-format ${TRAVIS_BUILD_DIR}/bin/lua-format-linux;
    fi
  - if [[ $TRAVIS_OS_NAME == "osx" && $TRAVIS_OSX_IMAGE == "xcode11" ]]; then
      mkdir ${TRAVIS_BUILD_DIR}/bin;
      cp ${TRAVIS_BUILD_DIR}/Release/lua-format ${TRAVIS_BUILD_DIR}/bin/lua-format-darwin;
    fi

deploy:
  provider: s3
  access_key_id: "${AWS_KEY_ID}"
  secret_access_key:
    secure: "${AWS_ACCESS_KEY}"
  bucket: "lua-formatter-release"
  local_dir: "${TRAVIS_BUILD_DIR}/bin"
  skip_cleanup: true
  on:
    tags: true
    condition: $COMPILER == g++-9 || $TRAVIS_OSX_IMAGE == xcode11
